Prototype vs Instance Members
-----------------------------
- Every object created from a constructor function
    - Each object contains a duplicate copy of its parent's members (property and/or method)
    
    - If there are 100 object created
        - There are 100 duplicate of the parent's members loaded in memory
        - Resulting to a waste of memory


- To address this concern
    - Move defined methods from a constructor function's instance member
    - To become a "prototype member" of the parent object

    - This is done by using the dot notation
        - To append the name of the method
        - Followed by "="
        - Then the body of the method

        Circle.prototype.draw = function () {
            console.log("Calling method from within the prototype...");
        };


- How does this help address the concern
    - Moving methods to be a "prototype member"
    - Guarantees a single instance of the method loaded in memory


- To overwrite the implementation of a prototype member method
    - Directly assign a new implementation (code) using the "=" operator
    
